{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  const {\n    response\n  } = error;\n  if ((response === null || response === void 0 ? void 0 : response.status) === 401) {\n    // Unauthorized - clear token and redirect to login\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n    return Promise.reject(error);\n  }\n  if ((response === null || response === void 0 ? void 0 : response.status) === 403) {\n    toast.error('Access forbidden');\n  } else if ((response === null || response === void 0 ? void 0 : response.status) === 404) {\n    toast.error('Resource not found');\n  } else if ((response === null || response === void 0 ? void 0 : response.status) >= 500) {\n    toast.error('Server error. Please try again later.');\n  } else if (!response) {\n    toast.error('Network error. Please check your connection.');\n  }\n  return Promise.reject(error);\n});\nexport async function registerUser(data) {\n  const response = await fetch(`${process.env.REACT_APP_API_URL}/api/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data),\n    credentials: 'include' // if you use cookies/session\n  });\n  if (!response.ok) {\n    throw new Error(await response.text());\n  }\n  return response.json();\n}\nexport default api;","map":{"version":3,"names":["axios","toast","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","removeItem","window","location","href","registerUser","data","fetch","method","body","JSON","stringify","credentials","ok","Error","text","json"],"sources":["C:/Users/DELL/Cooking/skillSwap/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    const { response } = error;\r\n    \r\n    if (response?.status === 401) {\r\n      // Unauthorized - clear token and redirect to login\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n      return Promise.reject(error);\r\n    }\r\n    \r\n    if (response?.status === 403) {\r\n      toast.error('Access forbidden');\r\n    } else if (response?.status === 404) {\r\n      toast.error('Resource not found');\r\n    } else if (response?.status >= 500) {\r\n      toast.error('Server error. Please try again later.');\r\n    } else if (!response) {\r\n      toast.error('Network error. Please check your connection.');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport async function registerUser(data) {\r\n  const response = await fetch(`${process.env.REACT_APP_API_URL}/api/register`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(data),\r\n    credentials: 'include', // if you use cookies/session\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(await response.text());\r\n  }\r\n  return response.json();\r\n}\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,GAAG,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACT,MAAM;IAAEG;EAAS,CAAC,GAAGH,KAAK;EAE1B,IAAI,CAAAG,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,MAAM,MAAK,GAAG,EAAE;IAC5B;IACAP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IAC/B,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B;EAEA,IAAI,CAAAG,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,MAAM,MAAK,GAAG,EAAE;IAC5BtB,KAAK,CAACkB,KAAK,CAAC,kBAAkB,CAAC;EACjC,CAAC,MAAM,IAAI,CAAAG,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,MAAM,MAAK,GAAG,EAAE;IACnCtB,KAAK,CAACkB,KAAK,CAAC,oBAAoB,CAAC;EACnC,CAAC,MAAM,IAAI,CAAAG,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,MAAM,KAAI,GAAG,EAAE;IAClCtB,KAAK,CAACkB,KAAK,CAAC,uCAAuC,CAAC;EACtD,CAAC,MAAM,IAAI,CAACG,QAAQ,EAAE;IACpBrB,KAAK,CAACkB,KAAK,CAAC,8CAA8C,CAAC;EAC7D;EAEA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,eAAeS,YAAYA,CAACC,IAAI,EAAE;EACvC,MAAMP,QAAQ,GAAG,MAAMQ,KAAK,CAAC,GAAG3B,OAAO,CAACC,GAAG,CAACC,iBAAiB,eAAe,EAAE;IAC5E0B,MAAM,EAAE,MAAM;IACdrB,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CsB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IAC1BM,WAAW,EAAE,SAAS,CAAE;EAC1B,CAAC,CAAC;EACF,IAAI,CAACb,QAAQ,CAACc,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,MAAMf,QAAQ,CAACgB,IAAI,CAAC,CAAC,CAAC;EACxC;EACA,OAAOhB,QAAQ,CAACiB,IAAI,CAAC,CAAC;AACxB;AAEA,eAAejC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}