version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: skillswap-mongodb-dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: skillswap123
      MONGO_INITDB_DATABASE: skillswap
    volumes:
      - mongodb_dev_data:/data/db
    networks:
      - skillswap-dev-network

  # Backend API (Development)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: skillswap-backend-dev
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:skillswap123@mongodb:27017/skillswap?authSource=admin
      JWT_SECRET: dev-jwt-secret-key
      JWT_EXPIRES_IN: 7d
      CLIENT_URL: http://localhost:3000
      PORT: 5000
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - skillswap-dev-network
    command: npm run dev

  # Frontend React App (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: skillswap-frontend-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      CHOKIDAR_USEPOLLING: true
      WDS_SOCKET_HOST: localhost
      WDS_SOCKET_PORT: 3000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - skillswap-dev-network
    stdin_open: true
    tty: true

  # Redis (for development)
  redis:
    image: redis:7-alpine
    container_name: skillswap-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    networks:
      - skillswap-dev-network

networks:
  skillswap-dev-network:
    driver: bridge

volumes:
  mongodb_dev_data:
    driver: local
  redis_dev_data:
    driver: local